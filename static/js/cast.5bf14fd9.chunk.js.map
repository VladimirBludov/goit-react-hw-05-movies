{"version":3,"file":"static/js/cast.5bf14fd9.chunk.js","mappings":"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","sources":["components/Cast/Cast.js","components/Cast/Cast.styles.js","components/CastItem/CastItem.styles.js","components/CastItem/CastItem.js","services/movies-api.js"],"sourcesContent":["import { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { useParams } from 'react-router-dom';\nimport api from '../../services/movies-api.js';\nimport { ActorList } from './Cast.styles.js';\nimport Loader from 'components/Loader';\nimport CastItem from 'components/CastItem';\n\nlet source;\n\nexport default function Cast() {\n  const [cast, setCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { slug } = useParams();\n  const movieId = slug.match(/[a-z0-9]+$/)[0];\n\n  useEffect(() => {\n    source = axios.CancelToken.source();\n    const config = { cancelToken: source.token };\n\n    async function getMoviesCast() {\n      try {\n        setIsLoading(true);\n        const response = await api.getMoviesCast(movieId, config);\n        setCast(response);\n      } catch (error) {\n        toast.error(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getMoviesCast();\n\n    return () => {\n      if (source) {\n        source.cancel('Landing Component got unmounted');\n      }\n    };\n  }, [movieId]);\n\n  const actorsElements = useMemo(() => {\n    if (!cast) return;\n\n    return cast.map(({ id, src, name, character }) => (\n      <CastItem key={id} src={src} name={name} character={character} />\n    ));\n  }, [cast]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <ActorList>{actorsElements}</ActorList>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ActorList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  padding-top: 15px;\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  width: calc((100% - 60px) / 5);\n  padding-bottom: 10px;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  width: 228px;\n  height: 342px;\n  object-fit: cover;\n  margin-bottom: 10px;\n`;\n\nexport const Name = styled.p`\n  font-size: 16px;\n  margin-bottom: 10px;\n`;\n\nexport const Character = styled.p`\n  font-size: 16px;\n`;\n","import PropTypes from 'prop-types';\nimport { Character, Item, Name, Poster } from './CastItem.styles';\n\nexport default function CastItem({ src, name, character }) {\n  return (\n    <Item>\n      <Poster src={src} />\n      <Name>\n        <b>Name:</b> {name}\n      </Name>\n      <Character>\n        <b>Character:</b> {character}\n      </Character>\n    </Item>\n  );\n}\n\nCastItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n};\n","import axios from 'axios';\nimport defaultImage from './avatar.gif';\nimport noImageAvailable from './noImageAvailable.jpg';\n\nconst BASE_URL = `https://api.themoviedb.org/3`;\nconst KEY_API = 'bfb3b67943be114531b8bb26195e1715';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nasync function getTrending(config) {\n  const url = `${BASE_URL}/trending/movie/week?api_key=${KEY_API}&language=ru-US`;\n  const { data } = await axios.get(url, config);\n\n  if (!data.results.length) {\n    return Promise.reject(\n      new Error('Sorry, the service is temporarily unavailable.')\n    );\n  }\n\n  return normalizedImgUrl(data.results);\n}\n\nasync function getMoviesByQuery(query, config) {\n  const url = `${BASE_URL}/search/movie?api_key=${KEY_API}&query=${query}&language=ru-US`;\n  const { data } = await axios.get(url, config);\n\n  if (!data.results.length) {\n    return Promise.reject(\n      new Error(`Sorry, no results were found for ${query}.`)\n    );\n  }\n  return normalizedImgUrl(data.results);\n}\n\nasync function getMoviesById(id, config) {\n  const url = `${BASE_URL}/movie/${id}?api_key=${KEY_API}&language=ru-US`;\n  const { data } = await axios.get(url, config);\n\n  if (!data) {\n    return Promise.reject(\n      new Error('Sorry, the service is temporarily unavailable.')\n    );\n  }\n\n  return normalizedMovie(data);\n}\n\nasync function getMoviesCast(id, config) {\n  const url = `${BASE_URL}/movie/${id}/credits?api_key=${KEY_API}&language=ru-US`;\n  const { data } = await axios.get(url, config);\n\n  if (!data.cast.length) {\n    return Promise.reject(new Error('We don`t have any cast for this movie.'));\n  }\n\n  return normalizedCast(data.cast);\n}\n\nasync function getReviews(id, config) {\n  const url = `${BASE_URL}/movie/${id}/reviews?api_key=${KEY_API}&language=ru-US`;\n  const { data } = await axios.get(url, config);\n\n  if (!data.results.length) {\n    return Promise.reject(\n      new Error('We don`t have any reviews for this movie.')\n    );\n  }\n\n  return data.results;\n}\n\nfunction normalizedCast(cast) {\n  return cast.map(item => ({\n    id: item['cast_id'],\n    name: item.name,\n    src: item['profile_path']\n      ? `${IMG_URL}${item['profile_path']}`\n      : defaultImage,\n    character: item.character,\n  }));\n}\n\nfunction normalizedMovie(movie) {\n  const genres = movie.genres.map(genre => genre.name).join(' ');\n\n  return {\n    title: movie['original_title'],\n    overview: movie.overview,\n    userScore: `${movie['vote_average'] * 10}%`,\n    genres,\n    src: checkPosterPath(movie['poster_path']),\n  };\n}\n\nfunction normalizedImgUrl(movies) {\n  return movies.map(movie => ({\n    ...movie,\n    poster_path: checkPosterPath(movie['poster_path']),\n  }));\n}\n\nfunction checkPosterPath(path) {\n  return path ? `${IMG_URL}${path}` : noImageAvailable;\n}\n\nconst api = {\n  getTrending,\n  getMoviesByQuery,\n  getMoviesById,\n  getMoviesCast,\n  getReviews,\n};\n\nexport default api;\n"],"names":["source","ActorList","styled","Item","Poster","Name","Character","CastItem","src","name","character","Cast","useState","cast","setCast","isLoading","setIsLoading","movieId","useParams","slug","match","useEffect","config","cancelToken","axios","token","api","response","toast","message","getMoviesCast","cancel","actorsElements","useMemo","map","id","Loader","BASE_URL","KEY_API","IMG_URL","getTrending","url","data","results","length","Promise","reject","Error","normalizedImgUrl","getMoviesByQuery","query","getMoviesById","normalizedMovie","normalizedCast","getReviews","item","defaultImage","movie","genres","genre","join","title","overview","userScore","checkPosterPath","movies","poster_path","path","noImageAvailable"],"sourceRoot":""}