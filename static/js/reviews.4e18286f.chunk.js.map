{"version":3,"file":"static/js/reviews.4e18286f.chunk.js","mappings":"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","sources":["components/ReviewItem/ReviewItem.styles.js","components/ReviewItem/ReviewItem.js","components/Reviews/Reviews.styles.js","components/Reviews/Reviews.js","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  padding-top: 10px;\n  padding-bottom: 10px;\n\n  &:nth-child(2n) {\n    background-color: #eee;\n  }\n`;\n\nexport const Name = styled.h3`\n  font-size: 16px;\n  margin-bottom: 10px;\n`;\n\nexport const Review = styled.p`\n  padding-left: 10px;\n  padding-right: 10px;\n  font-size: 16px;\n`;\n","import PropTypes from 'prop-types';\nimport { Review, Item, Name } from './ReviewItem.styles';\n\nexport default function ReviewItem({ name, review }) {\n  return (\n    <Item>\n      <Name>{name}</Name>\n      <Review>{review}</Review>\n    </Item>\n  );\n}\n\nReviewItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  review: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  width: 100%;\n`;\n","import { useState, useEffect, useMemo } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { useParams } from 'react-router-dom';\nimport api from '../../services/movies-api.js';\nimport ReviewItem from '../ReviewItem';\nimport { ReviewList } from './Reviews.styles.js';\nimport Loader from 'components/Loader';\n\nlet source;\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { slug } = useParams();\n  const movieId = slug.match(/[a-z0-9]+$/)[0];\n\n  useEffect(() => {\n    source = axios.CancelToken.source();\n    const config = { cancelToken: source.token };\n\n    async function getReviews() {\n      try {\n        setIsLoading(true);\n        const response = await api.getReviews(movieId, config);\n        setReviews(response);\n      } catch (error) {\n        toast.error(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getReviews();\n\n    return () => {\n      if (source) {\n        source.cancel('Landing Component got unmounted');\n      }\n    };\n  }, [movieId]);\n\n  const reviewsElements = useMemo(() => {\n    if (!reviews) {\n      return;\n    }\n\n    return reviews.map(({ id, author, content }) => (\n      <ReviewItem key={id} name={author} review={content} />\n    ));\n  }, [reviews]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <ReviewList>{reviewsElements}</ReviewList>\n    </>\n  );\n}\n","import axios from 'axios';\nimport defaultImage from './avatar.gif';\nimport noImageAvailable from './noImageAvailable.jpg';\n\nconst BASE_URL = `https://api.themoviedb.org/3`;\nconst KEY_API = 'bfb3b67943be114531b8bb26195e1715';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nasync function getTrending(config) {\n  const url = `${BASE_URL}/trending/movie/week?api_key=${KEY_API}&language=ru-US`;\n  const { data } = await axios.get(url, config);\n\n  if (!data.results.length) {\n    return Promise.reject(\n      new Error('Sorry, the service is temporarily unavailable.')\n    );\n  }\n\n  return normalizedImgUrl(data.results);\n}\n\nasync function getMoviesByQuery(query, config) {\n  const url = `${BASE_URL}/search/movie?api_key=${KEY_API}&query=${query}&language=ru-US`;\n  const { data } = await axios.get(url, config);\n\n  if (!data.results.length) {\n    return Promise.reject(\n      new Error(`Sorry, no results were found for ${query}.`)\n    );\n  }\n  return normalizedImgUrl(data.results);\n}\n\nasync function getMoviesById(id, config) {\n  const url = `${BASE_URL}/movie/${id}?api_key=${KEY_API}&language=ru-US`;\n  const { data } = await axios.get(url, config);\n\n  if (!data) {\n    return Promise.reject(\n      new Error('Sorry, the service is temporarily unavailable.')\n    );\n  }\n\n  return normalizedMovie(data);\n}\n\nasync function getMoviesCast(id, config) {\n  const url = `${BASE_URL}/movie/${id}/credits?api_key=${KEY_API}&language=ru-US`;\n  const { data } = await axios.get(url, config);\n\n  if (!data.cast.length) {\n    return Promise.reject(new Error('We don`t have any cast for this movie.'));\n  }\n\n  return normalizedCast(data.cast);\n}\n\nasync function getReviews(id, config) {\n  const url = `${BASE_URL}/movie/${id}/reviews?api_key=${KEY_API}&language=ru-US`;\n  const { data } = await axios.get(url, config);\n\n  if (!data.results.length) {\n    return Promise.reject(\n      new Error('We don`t have any reviews for this movie.')\n    );\n  }\n\n  return data.results;\n}\n\nfunction normalizedCast(cast) {\n  return cast.map(item => ({\n    id: item['cast_id'],\n    name: item.name,\n    src: item['profile_path']\n      ? `${IMG_URL}${item['profile_path']}`\n      : defaultImage,\n    character: item.character,\n  }));\n}\n\nfunction normalizedMovie(movie) {\n  const genres = movie.genres.map(genre => genre.name).join(' ');\n\n  return {\n    title: movie['original_title'],\n    overview: movie.overview,\n    userScore: `${movie['vote_average'] * 10}%`,\n    genres,\n    src: checkPosterPath(movie['poster_path']),\n  };\n}\n\nfunction normalizedImgUrl(movies) {\n  return movies.map(movie => ({\n    ...movie,\n    poster_path: checkPosterPath(movie['poster_path']),\n  }));\n}\n\nfunction checkPosterPath(path) {\n  return path ? `${IMG_URL}${path}` : noImageAvailable;\n}\n\nconst api = {\n  getTrending,\n  getMoviesByQuery,\n  getMoviesById,\n  getMoviesCast,\n  getReviews,\n};\n\nexport default api;\n"],"names":["Item","styled","Name","Review","ReviewItem","name","review","source","ReviewList","Reviews","useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","slug","match","useEffect","config","cancelToken","axios","token","api","response","toast","message","getReviews","cancel","reviewsElements","useMemo","map","id","author","content","Loader","BASE_URL","KEY_API","IMG_URL","getTrending","url","data","results","length","Promise","reject","Error","normalizedImgUrl","getMoviesByQuery","query","getMoviesById","normalizedMovie","getMoviesCast","cast","normalizedCast","item","src","defaultImage","character","movie","genres","genre","join","title","overview","userScore","checkPosterPath","movies","poster_path","path","noImageAvailable"],"sourceRoot":""}