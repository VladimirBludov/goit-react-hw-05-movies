{"version":3,"file":"static/js/movies-page.e5fbb105.chunk.js","mappings":"oUAEaA,EAAOC,EAAAA,GAAAA,KAAH,gDAIJC,EAAQD,EAAAA,GAAAA,MAAAA,MAAmB,CAAEE,KAAM,SAAUC,KAAM,UAA3CH,CAAH,kJAWLI,EAAeJ,EAAAA,GAAAA,OAAH,0O,SCRV,SAASK,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SACnC,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAOMC,EAAY,mCAAG,WAAMC,GAAN,0EACnBA,EAAEC,iBACIC,EAAwBL,EAAYM,cAAcC,OAFrC,uBAKjBC,EAAAA,GAAAA,MAAY,mCALK,0BASnBV,EAASO,GACTJ,EAAe,IAVI,2CAAH,sDAalB,OACE,UAACV,EAAD,CAAMkB,SAAUP,EAAhB,WACE,SAACT,EAAD,CAAOiB,MAAOV,EAAaW,SApBV,SAAAR,GACnB,IAAMS,EAAQT,EAAEU,OAAOH,MACvBT,EAAeW,OAmBb,SAAChB,EAAD,CAAcF,KAAK,SAAnB,uB,ICxBFoB,E,SAEW,SAASC,IAAc,IAAD,EACnC,GAA4BhB,EAAAA,EAAAA,UAAS,IAArC,eAAOiB,EAAP,KAAeC,EAAf,KACA,GAAkClB,EAAAA,EAAAA,WAAS,GAA3C,eAAOmB,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAI,UAAMF,EAASG,UAAf,OAA0BH,EAASI,QAEvC3B,EAAW,UAAGqB,EAAaO,IAAI,gBAApB,QAAgC,IAEjDC,EAAAA,EAAAA,YAAU,WACR,GAAK7B,EAAL,CAKA,IAAM8B,EAAS,CAAEC,aADjBjB,EAASkB,IAAAA,YAAAA,UAC4BC,OAE/BC,EAAS,mCAAG,oGAEdf,GAAa,GAFC,SAIOgB,EAAAA,EAAAA,iBAAqBnC,EAAa8B,GAJzC,OAIRd,EAJQ,OAKdC,EAAUD,GALI,gDAOdR,EAAAA,GAAAA,MAAY,KAAM4B,SAPJ,yBASdjB,GAAa,GATC,4EAAH,qDAcf,OADAe,IACO,WACDpB,GACFA,EAAOuB,OAAO,uCAGjB,CAACrC,EAAaiB,IAWjB,OACE,iCACE,SAACpB,EAAD,CAAYC,SAXC,SAAAc,GACXA,IAAUZ,EAKdsB,EAAgB,CAAEV,MAAAA,IAJhBJ,EAAAA,GAAAA,MAAY,iDAUXU,IAAa,SAACoB,EAAA,EAAD,KACd,SAACC,EAAA,EAAD,CAAYvB,OAAQA,EAAQS,KAAMA","sources":["components/SearchForm/SearchForm.styles.js","components/SearchForm/SearchForm.js","views/MoviesPage/MoviesPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-bottom: 15px;\n`;\n\nexport const Input = styled.input.attrs({ type: 'search', name: 'search' })`\n  width: 300px;\n  padding: 5px;\n  font-size: 20px;\n\n  &:hover,\n  &:focus {\n    outline: 1px solid lightgreen;\n  }\n`;\n\nexport const ButtonSearch = styled.button`\n  padding: 10px;\n  margin-left: 10px;\n  border: none;\n  border-radius: 4px;\n  background-color: #ccc;\n  color: #fff;\n  font-size: 20px;\n\n  &:hover,\n  &:focus {\n    background-color: lightgreen;\n  }\n`;\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { ButtonSearch, Form, Input } from './SearchForm.styles';\n\nSearchForm.propTypes = {\n  getQuery: PropTypes.func.isRequired,\n};\n\nexport default function SearchForm({ getQuery }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleChange = e => {\n    const query = e.target.value;\n    setSearchQuery(query);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const normalizedSearchQuery = searchQuery.toLowerCase().trim();\n\n    if (!normalizedSearchQuery) {\n      toast.error('Please enter search parameters.');\n      return;\n    }\n\n    getQuery(normalizedSearchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input value={searchQuery} onChange={handleChange} />\n      <ButtonSearch type=\"submit\">Search</ButtonSearch>\n    </Form>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport api from '../../services/movies-api';\nimport MoviesList from 'components/MoviesList';\nimport SearchForm from 'components/SearchForm';\nimport Loader from 'components/Loader';\n\nlet source;\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const from = `${location.pathname}${location.search}`;\n\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    source = axios.CancelToken.source();\n    const config = { cancelToken: source.token };\n\n    const getMovies = async () => {\n      try {\n        setIsLoading(true);\n\n        const movies = await api.getMoviesByQuery(searchQuery, config);\n        setMovies(movies);\n      } catch (error) {\n        toast.error(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovies();\n    return () => {\n      if (source) {\n        source.cancel('Landing Component got unmounted');\n      }\n    };\n  }, [searchQuery, setMovies]);\n\n  const getQuery = query => {\n    if (query === searchQuery) {\n      toast.error('You are already on the page of this query.');\n      return;\n    }\n\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <SearchForm getQuery={getQuery} />\n      {isLoading && <Loader />}\n      <MoviesList movies={movies} from={from} />\n    </>\n  );\n}\n"],"names":["Form","styled","Input","type","name","ButtonSearch","SearchForm","getQuery","useState","searchQuery","setSearchQuery","handleSubmit","e","preventDefault","normalizedSearchQuery","toLowerCase","trim","toast","onSubmit","value","onChange","query","target","source","MoviesPage","movies","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","location","useLocation","from","pathname","search","get","useEffect","config","cancelToken","axios","token","getMovies","api","message","cancel","Loader","MoviesList"],"sourceRoot":""}