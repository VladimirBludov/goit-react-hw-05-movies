{"version":3,"file":"static/js/movie-details-page.7668fb1c.chunk.js","mappings":"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","sources":["services/movies-api.js","views/MovieDetailsPage/MovieDetailsPage.js","views/MovieDetailsPage/MovieDetailsPage.styles.js","components/AdditionalInfo/AdditionalInfo.styles.js","components/AdditionalInfo/AdditionalInfo.js"],"sourcesContent":["import axios from 'axios';\nimport defaultImage from './avatar.gif';\nimport noImageAvailable from './noImageAvailable.jpg';\n\nconst BASE_URL = `https://api.themoviedb.org/3`;\nconst KEY_API = 'bfb3b67943be114531b8bb26195e1715';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nasync function getTrending(config) {\n  const url = `${BASE_URL}/trending/movie/week?api_key=${KEY_API}&language=ru-US`;\n  const { data } = await axios.get(url, config);\n\n  if (!data.results.length) {\n    return Promise.reject(\n      new Error('Sorry, the service is temporarily unavailable.')\n    );\n  }\n\n  return normalizedImgUrl(data.results);\n}\n\nasync function getMoviesByQuery(query, config) {\n  const url = `${BASE_URL}/search/movie?api_key=${KEY_API}&query=${query}&language=ru-US`;\n  const { data } = await axios.get(url, config);\n\n  if (!data.results.length) {\n    return Promise.reject(\n      new Error(`Sorry, no results were found for ${query}.`)\n    );\n  }\n  return normalizedImgUrl(data.results);\n}\n\nasync function getMoviesById(id, config) {\n  const url = `${BASE_URL}/movie/${id}?api_key=${KEY_API}&language=ru-US`;\n  const { data } = await axios.get(url, config);\n\n  if (!data) {\n    return Promise.reject(\n      new Error('Sorry, the service is temporarily unavailable.')\n    );\n  }\n\n  return normalizedMovie(data);\n}\n\nasync function getMoviesCast(id, config) {\n  const url = `${BASE_URL}/movie/${id}/credits?api_key=${KEY_API}&language=ru-US`;\n  const { data } = await axios.get(url, config);\n\n  if (!data.cast.length) {\n    return Promise.reject(new Error('We don`t have any cast for this movie.'));\n  }\n\n  return normalizedCast(data.cast);\n}\n\nasync function getReviews(id, config) {\n  const url = `${BASE_URL}/movie/${id}/reviews?api_key=${KEY_API}&language=ru-US`;\n  const { data } = await axios.get(url, config);\n\n  if (!data.results.length) {\n    return Promise.reject(\n      new Error('We don`t have any reviews for this movie.')\n    );\n  }\n\n  return data.results;\n}\n\nfunction normalizedCast(cast) {\n  return cast.map(item => ({\n    id: item['cast_id'],\n    name: item.name,\n    src: item['profile_path']\n      ? `${IMG_URL}${item['profile_path']}`\n      : defaultImage,\n    character: item.character,\n  }));\n}\n\nfunction normalizedMovie(movie) {\n  const genres = movie.genres.map(genre => genre.name).join(' ');\n\n  return {\n    title: movie['original_title'],\n    overview: movie.overview,\n    userScore: `${movie['vote_average'] * 10}%`,\n    genres,\n    src: checkPosterPath(movie['poster_path']),\n  };\n}\n\nfunction normalizedImgUrl(movies) {\n  return movies.map(movie => ({\n    ...movie,\n    poster_path: checkPosterPath(movie['poster_path']),\n  }));\n}\n\nfunction checkPosterPath(path) {\n  return path ? `${IMG_URL}${path}` : noImageAvailable;\n}\n\nconst api = {\n  getTrending,\n  getMoviesByQuery,\n  getMoviesById,\n  getMoviesCast,\n  getReviews,\n};\n\nexport default api;\n","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { useParams, useNavigate, Outlet, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport api from '../../services/movies-api.js';\nimport {\n  BackButton,\n  Image,\n  Text,\n  Title,\n  WrapperMovie,\n} from './MovieDetailsPage.styles.js';\nimport Loader from 'components/Loader';\nimport AdditionalInfo from 'components/AdditionalInfo';\n\nlet source;\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { slug } = useParams();\n  const movieId = slug.match(/[a-z0-9]+$/)[0];\n\n  const prevPage = useRef(location.state?.prevPath);\n\n  useEffect(() => {\n    source = axios.CancelToken.source();\n    const config = { cancelToken: source.token };\n\n    async function getMovie() {\n      try {\n        setIsLoading(true);\n        const response = await api.getMoviesById(movieId, config);\n        setMovie({ ...response });\n      } catch (error) {\n        toast.error(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getMovie();\n\n    return () => {\n      if (source) {\n        source.cancel('Landing Component got unmounted');\n      }\n    };\n  }, [movieId]);\n\n  const goBack = () => {\n    if (prevPage.current) {\n      navigate(prevPage.current);\n      return;\n    }\n\n    navigate('/');\n  };\n\n  return (\n    <>\n      <BackButton type=\"button\" onClick={goBack}>\n        Go back\n      </BackButton>\n      {isLoading && <Loader />}\n      <WrapperMovie>\n        <Image src={movie.src} alt={movie.title} />\n        <div>\n          <Title>{movie.title}</Title>\n          <Text>User Score: {movie.userScore}</Text>\n          <Title>Overview</Title>\n          <Text>{movie.overview}</Text>\n          <Title>Genres</Title>\n          <Text>{movie.genres}</Text>\n        </div>\n      </WrapperMovie>\n      <AdditionalInfo />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const WrapperMovie = styled.div`\n  display: flex;\n  gap: 30px;\n  width: 100%;\n  padding: 30px 15px;\n`;\n\nexport const BackButton = styled.button`\n  display: block;\n  width: 100%;\n  border: none;\n  font-size: 20px;\n  color: #fff;\n  background-color: #ccc;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  padding: 15px 0;\n  border-radius: 4px;\n`;\n\nexport const Image = styled.img`\n  width: 240px;\n\n  box-shadow: 0 1px 4px black, -23px 0 20px -23px rgb(0 0 0 / 80%),\n    23px 0 20px -23px rgb(0 0 0 / 80%), 0 0 40px rgb(0 0 0 / 10%) inset;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.15;\n  color: #000000;\n  margin-bottom: 20px;\n\n  &:first-child {\n    font-size: 30px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 16px;\n  line-height: 1.33;\n\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  border-top: 1px solid #ccc;\n  border-bottom: 1px solid #ccc;\n  padding: 30px 15px;\n`;\n\nexport const Title = styled.h3`\n  font-size: 20px;\n`;\n\nexport const List = styled.ul`\n  margin-top: 15px;\n`;\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  color: cornflowerblue;\n  &.active {\n    color: gold;\n  }\n`;\n","import { Container, Item, List, Title, Link } from './AdditionalInfo.styles';\n\nexport default function AdditionalInfo() {\n  return (\n    <Container>\n      <Title>Additional information:</Title>\n      <List>\n        <Item>\n          <Link to=\"cast\">Cast</Link>\n        </Item>\n        <Item>\n          <Link to=\"reviews\">Reviews</Link>\n        </Item>\n      </List>\n    </Container>\n  );\n}\n"],"names":["BASE_URL","KEY_API","IMG_URL","getTrending","config","url","axios","data","results","length","Promise","reject","Error","normalizedImgUrl","getMoviesByQuery","query","getMoviesById","id","normalizedMovie","getMoviesCast","cast","normalizedCast","getReviews","map","item","name","src","defaultImage","character","movie","genres","genre","join","title","overview","userScore","checkPosterPath","movies","poster_path","path","noImageAvailable","api","source","WrapperMovie","styled","BackButton","Image","Title","Text","Container","List","Item","Link","NavLink","AdditionalInfo","to","MovieDetailsPage","useState","setMovie","isLoading","setIsLoading","location","useLocation","navigate","useNavigate","movieId","useParams","slug","match","prevPage","useRef","state","prevPath","useEffect","cancelToken","token","response","toast","message","getMovie","cancel","type","onClick","current","Loader","alt","Suspense","fallback"],"sourceRoot":""}